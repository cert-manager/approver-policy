{{ if .Values.crds.enabled }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: certificaterequestpolicies.policy.cert-manager.io
spec:
  group: policy.cert-manager.io
  names:
    categories:
    - cert-manager
    kind: CertificateRequestPolicy
    listKind: CertificateRequestPolicyList
    plural: certificaterequestpolicies
    shortNames:
    - crp
    singular: certificaterequestpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: CertificateRequestPolicy is ready for evaluation
      jsonPath: .status.conditions[?(@.type == "Ready")].status
      name: Ready
      type: string
    - description: Timestamp CertificateRequestPolicy was created
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CertificateRequestPolicy is an object for describing a "policy
          profile" that makes decisions on whether applicable CertificateRequests
          should be approved or denied.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CertificateRequestPolicySpec defines the desired state of
              CertificateRequestPolicy.
            properties:
              allowed:
                description: Allowed defines the allowed attributes for a CertificateRequest.
                  A CertificateRequest can request _less_ than what is allowed, but
                  _not more_, i.e. a CertificateRequest can request a subset of what
                  is declared as allowed by the policy. Omitted fields declare that
                  the equivalent CertificateRequest field _must_ be omitted or have
                  an empty value for the request to be permitted.
                properties:
                  commonName:
                    description: CommonName defines the X.509 Common Name that may
                      be requested.
                    properties:
                      required:
                        description: Required marks that the related field must be
                          provided and not be an empty string. Defaults to `false`.
                        type: boolean
                      validations:
                        description: Validations applies rules using Common Expression
                          Language (CEL) to validate attribute value present on request
                          beyond what is possible to express using value/required.
                          An attribute value on the related CertificateRequest field
                          must pass ALL validations for the request to be granted
                          by this policy.
                        items:
                          description: ValidationRule describes a validation rule
                            expressed in CEL.
                          properties:
                            message:
                              description: 'Message is the message to display when
                                validation fails. Message is required if the Rule
                                contains line breaks. Note that Message must not contain
                                line breaks. If unset, a fallback message is used:
                                "failed rule: {Rule}". e.g. "must be a URL with the
                                host matching spec.host"'
                              type: string
                            rule:
                              description: "Rule represents the expression which will
                                be evaluated by CEL. ref: https://github.com/google/cel-spec
                                The Rule is scoped to the location of the validations
                                in the schema. The `self` variable in the CEL expression
                                is bound to the scoped value. To enable more advanced
                                validation rules, approver-policy provides the `cr`
                                (map) variable to the CEL expression containing `namespace`
                                and `name` of the `CertificateRequest` resource. \n
                                Examples: - Rule for namespaced DNSNames: {\"rule\":
                                \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                              type: string
                          required:
                          - rule
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - rule
                        x-kubernetes-list-type: map
                      value:
                        description: "Value defines the allowed attribute value on
                          the related CertificateRequest field. Accepts wildcards
                          \"*\". If set, the related field must match the specified
                          pattern. \n NOTE:`value: \"\"` paired with `required: true`
                          establishes a policy that will never grant a `CertificateRequest`,
                          but other policies may."
                        type: string
                    type: object
                  dnsNames:
                    description: DNSNames defines the X.509 DNS SANs that may be requested.
                    properties:
                      required:
                        description: Required controls whether the related field must
                          have at least one value. Defaults to `false`.
                        type: boolean
                      validations:
                        description: Validations applies rules using Common Expression
                          Language (CEL) to validate attribute values present on request
                          beyond what is possible to express using values/required.
                          ALL attribute values on the related CertificateRequest field
                          must pass ALL validations for the request to be granted
                          by this policy.
                        items:
                          description: ValidationRule describes a validation rule
                            expressed in CEL.
                          properties:
                            message:
                              description: 'Message is the message to display when
                                validation fails. Message is required if the Rule
                                contains line breaks. Note that Message must not contain
                                line breaks. If unset, a fallback message is used:
                                "failed rule: {Rule}". e.g. "must be a URL with the
                                host matching spec.host"'
                              type: string
                            rule:
                              description: "Rule represents the expression which will
                                be evaluated by CEL. ref: https://github.com/google/cel-spec
                                The Rule is scoped to the location of the validations
                                in the schema. The `self` variable in the CEL expression
                                is bound to the scoped value. To enable more advanced
                                validation rules, approver-policy provides the `cr`
                                (map) variable to the CEL expression containing `namespace`
                                and `name` of the `CertificateRequest` resource. \n
                                Examples: - Rule for namespaced DNSNames: {\"rule\":
                                \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                              type: string
                          required:
                          - rule
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - rule
                        x-kubernetes-list-type: map
                      values:
                        description: "Values defines allowed attribute values on the
                          related CertificateRequest field. Accepts wildcards \"*\".
                          If set, the related field can only include items contained
                          in the allowed values. \n NOTE:`values: []` paired with
                          `required: true` establishes a policy that will never grant
                          a `CertificateRequest`, but other policies may. TODO: add
                          x-kubernetes-list-type: set in v1alpha2"
                        items:
                          type: string
                        type: array
                    type: object
                  emailAddresses:
                    description: EmailAddresses defines the X.509 Email SANs that
                      may be requested.
                    properties:
                      required:
                        description: Required controls whether the related field must
                          have at least one value. Defaults to `false`.
                        type: boolean
                      validations:
                        description: Validations applies rules using Common Expression
                          Language (CEL) to validate attribute values present on request
                          beyond what is possible to express using values/required.
                          ALL attribute values on the related CertificateRequest field
                          must pass ALL validations for the request to be granted
                          by this policy.
                        items:
                          description: ValidationRule describes a validation rule
                            expressed in CEL.
                          properties:
                            message:
                              description: 'Message is the message to display when
                                validation fails. Message is required if the Rule
                                contains line breaks. Note that Message must not contain
                                line breaks. If unset, a fallback message is used:
                                "failed rule: {Rule}". e.g. "must be a URL with the
                                host matching spec.host"'
                              type: string
                            rule:
                              description: "Rule represents the expression which will
                                be evaluated by CEL. ref: https://github.com/google/cel-spec
                                The Rule is scoped to the location of the validations
                                in the schema. The `self` variable in the CEL expression
                                is bound to the scoped value. To enable more advanced
                                validation rules, approver-policy provides the `cr`
                                (map) variable to the CEL expression containing `namespace`
                                and `name` of the `CertificateRequest` resource. \n
                                Examples: - Rule for namespaced DNSNames: {\"rule\":
                                \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                              type: string
                          required:
                          - rule
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - rule
                        x-kubernetes-list-type: map
                      values:
                        description: "Values defines allowed attribute values on the
                          related CertificateRequest field. Accepts wildcards \"*\".
                          If set, the related field can only include items contained
                          in the allowed values. \n NOTE:`values: []` paired with
                          `required: true` establishes a policy that will never grant
                          a `CertificateRequest`, but other policies may. TODO: add
                          x-kubernetes-list-type: set in v1alpha2"
                        items:
                          type: string
                        type: array
                    type: object
                  ipAddresses:
                    description: IPAddresses defines the X.509 IP SANs that may be
                      requested.
                    properties:
                      required:
                        description: Required controls whether the related field must
                          have at least one value. Defaults to `false`.
                        type: boolean
                      validations:
                        description: Validations applies rules using Common Expression
                          Language (CEL) to validate attribute values present on request
                          beyond what is possible to express using values/required.
                          ALL attribute values on the related CertificateRequest field
                          must pass ALL validations for the request to be granted
                          by this policy.
                        items:
                          description: ValidationRule describes a validation rule
                            expressed in CEL.
                          properties:
                            message:
                              description: 'Message is the message to display when
                                validation fails. Message is required if the Rule
                                contains line breaks. Note that Message must not contain
                                line breaks. If unset, a fallback message is used:
                                "failed rule: {Rule}". e.g. "must be a URL with the
                                host matching spec.host"'
                              type: string
                            rule:
                              description: "Rule represents the expression which will
                                be evaluated by CEL. ref: https://github.com/google/cel-spec
                                The Rule is scoped to the location of the validations
                                in the schema. The `self` variable in the CEL expression
                                is bound to the scoped value. To enable more advanced
                                validation rules, approver-policy provides the `cr`
                                (map) variable to the CEL expression containing `namespace`
                                and `name` of the `CertificateRequest` resource. \n
                                Examples: - Rule for namespaced DNSNames: {\"rule\":
                                \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                              type: string
                          required:
                          - rule
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - rule
                        x-kubernetes-list-type: map
                      values:
                        description: "Values defines allowed attribute values on the
                          related CertificateRequest field. Accepts wildcards \"*\".
                          If set, the related field can only include items contained
                          in the allowed values. \n NOTE:`values: []` paired with
                          `required: true` establishes a policy that will never grant
                          a `CertificateRequest`, but other policies may. TODO: add
                          x-kubernetes-list-type: set in v1alpha2"
                        items:
                          type: string
                        type: array
                    type: object
                  isCA:
                    description: IsCA defines if a CertificateRequest is allowed to
                      set the `spec.isCA` field set to `true`. If `true`, the `spec.isCA`
                      field can be `true` or `false`. If `false` or unset, the `spec.isCA`
                      field must be `false`.
                    type: boolean
                  subject:
                    description: Subject declares the X.509 Subject attributes allowed
                      in a CertificateRequest. An omitted field forbids any Subject
                      attributes from being requested. A CertificateRequest can request
                      a subset of the allowed X.509 Subject attributes.
                    properties:
                      countries:
                        description: Countries define the X.509 Subject Countries
                          that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                      localities:
                        description: Localities defines the X.509 Subject Localities
                          that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                      organizationalUnits:
                        description: OrganizationalUnits defines the X.509 Subject
                          Organizational Units that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                      organizations:
                        description: Organizations define the X.509 Subject Organizations
                          that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                      postalCodes:
                        description: PostalCodes defines the X.509 Subject Postal
                          Codes that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                      provinces:
                        description: Provinces defines the X.509 Subject Provinces
                          that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                      serialNumber:
                        description: SerialNumber defines the X.509 Subject Serial
                          Number that may be requested.
                        properties:
                          required:
                            description: Required marks that the related field must
                              be provided and not be an empty string. Defaults to
                              `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute value present on
                              request beyond what is possible to express using value/required.
                              An attribute value on the related CertificateRequest
                              field must pass ALL validations for the request to be
                              granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          value:
                            description: "Value defines the allowed attribute value
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field must match the specified
                              pattern. \n NOTE:`value: \"\"` paired with `required:
                              true` establishes a policy that will never grant a `CertificateRequest`,
                              but other policies may."
                            type: string
                        type: object
                      streetAddresses:
                        description: StreetAddresses defines the X.509 Subject Street
                          Addresses that may be requested.
                        properties:
                          required:
                            description: Required controls whether the related field
                              must have at least one value. Defaults to `false`.
                            type: boolean
                          validations:
                            description: Validations applies rules using Common Expression
                              Language (CEL) to validate attribute values present
                              on request beyond what is possible to express using
                              values/required. ALL attribute values on the related
                              CertificateRequest field must pass ALL validations for
                              the request to be granted by this policy.
                            items:
                              description: ValidationRule describes a validation rule
                                expressed in CEL.
                              properties:
                                message:
                                  description: 'Message is the message to display
                                    when validation fails. Message is required if
                                    the Rule contains line breaks. Note that Message
                                    must not contain line breaks. If unset, a fallback
                                    message is used: "failed rule: {Rule}". e.g. "must
                                    be a URL with the host matching spec.host"'
                                  type: string
                                rule:
                                  description: "Rule represents the expression which
                                    will be evaluated by CEL. ref: https://github.com/google/cel-spec
                                    The Rule is scoped to the location of the validations
                                    in the schema. The `self` variable in the CEL
                                    expression is bound to the scoped value. To enable
                                    more advanced validation rules, approver-policy
                                    provides the `cr` (map) variable to the CEL expression
                                    containing `namespace` and `name` of the `CertificateRequest`
                                    resource. \n Examples: - Rule for namespaced DNSNames:
                                    {\"rule\": \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                                  type: string
                              required:
                              - rule
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - rule
                            x-kubernetes-list-type: map
                          values:
                            description: "Values defines allowed attribute values
                              on the related CertificateRequest field. Accepts wildcards
                              \"*\". If set, the related field can only include items
                              contained in the allowed values. \n NOTE:`values: []`
                              paired with `required: true` establishes a policy that
                              will never grant a `CertificateRequest`, but other policies
                              may. TODO: add x-kubernetes-list-type: set in v1alpha2"
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  uris:
                    description: URIs defines the X.509 URI SANs that may be requested.
                    properties:
                      required:
                        description: Required controls whether the related field must
                          have at least one value. Defaults to `false`.
                        type: boolean
                      validations:
                        description: Validations applies rules using Common Expression
                          Language (CEL) to validate attribute values present on request
                          beyond what is possible to express using values/required.
                          ALL attribute values on the related CertificateRequest field
                          must pass ALL validations for the request to be granted
                          by this policy.
                        items:
                          description: ValidationRule describes a validation rule
                            expressed in CEL.
                          properties:
                            message:
                              description: 'Message is the message to display when
                                validation fails. Message is required if the Rule
                                contains line breaks. Note that Message must not contain
                                line breaks. If unset, a fallback message is used:
                                "failed rule: {Rule}". e.g. "must be a URL with the
                                host matching spec.host"'
                              type: string
                            rule:
                              description: "Rule represents the expression which will
                                be evaluated by CEL. ref: https://github.com/google/cel-spec
                                The Rule is scoped to the location of the validations
                                in the schema. The `self` variable in the CEL expression
                                is bound to the scoped value. To enable more advanced
                                validation rules, approver-policy provides the `cr`
                                (map) variable to the CEL expression containing `namespace`
                                and `name` of the `CertificateRequest` resource. \n
                                Examples: - Rule for namespaced DNSNames: {\"rule\":
                                \"self.endsWith(cr.namespace + '.svc.cluster.local'\"}"
                              type: string
                          required:
                          - rule
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - rule
                        x-kubernetes-list-type: map
                      values:
                        description: "Values defines allowed attribute values on the
                          related CertificateRequest field. Accepts wildcards \"*\".
                          If set, the related field can only include items contained
                          in the allowed values. \n NOTE:`values: []` paired with
                          `required: true` establishes a policy that will never grant
                          a `CertificateRequest`, but other policies may. TODO: add
                          x-kubernetes-list-type: set in v1alpha2"
                        items:
                          type: string
                        type: array
                    type: object
                  usages:
                    description: 'Usages defines the key usages that may be included
                      in a CertificateRequest `spec.keyUsages` field. If set, `spec.keyUsages`
                      in a CertificateRequest must be a subset of the specified values.
                      If `[]` or unset, no `spec.keyUsages` are allowed. TODO: add
                      x-kubernetes-list-type: set in v1alpha2'
                    items:
                      description: "KeyUsage specifies valid usage contexts for keys.
                        See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                        \n Valid KeyUsage values are as follows: \"signing\", \"digital
                        signature\", \"content commitment\", \"key encipherment\",
                        \"key agreement\", \"data encipherment\", \"cert sign\", \"crl
                        sign\", \"encipher only\", \"decipher only\", \"any\", \"server
                        auth\", \"client auth\", \"code signing\", \"email protection\",
                        \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec
                        user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\",
                        \"netscape sgc\""
                      enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                      type: string
                    type: array
                type: object
              constraints:
                description: Constraints define fields that _must_ be satisfied by
                  a CertificateRequest for the request to be allowed by this policy.
                  Omitted fields place no restrictions on the corresponding attribute
                  in a request.
                properties:
                  maxDuration:
                    description: MaxDuration defines the maximum duration for a certificate
                      request. for. Values are inclusive (i.e. a value of `1h` will
                      accept a duration of `1h`). MinDuration and MaxDuration may
                      be the same value. If set, a duration _must_ be requested in
                      the CertificateRequest. An omitted field applies no maximum
                      constraint for duration.
                    type: string
                  minDuration:
                    description: MinDuration defines the minimum duration for a certificate
                      request. Values are inclusive (i.e. a value of `1h` will accept
                      a duration of `1h`). MinDuration and MaxDuration may be the
                      same value. If set, a duration _must_ be requested in the CertificateRequest.
                      An omitted field applies no minimum constraint for duration.
                    type: string
                  privateKey:
                    description: PrivateKey defines constraints on the shape of private
                      key allowed for a CertificateRequest. An omitted field applies
                      no private key shape constraints.
                    properties:
                      algorithm:
                        description: Algorithm defines the allowed crypto algorithm
                          for the private key in a request. An omitted field permits
                          any algorithm.
                        enum:
                        - RSA
                        - ECDSA
                        - Ed25519
                        type: string
                      maxSize:
                        description: MaxSize defines the maximum key size for a private
                          key. Values are inclusive (i.e. a min value of `2048` will
                          accept a size of `2048`). MaxSize and MinSize may be the
                          same value. An omitted field applies no maximum constraint
                          on size.
                        type: integer
                      minSize:
                        description: MinSize defines the minimum key size for a private
                          key. Values are inclusive (i.e. a min value of `2048` will
                          accept a size of `2048`). MinSize and MaxSize may be the
                          same value. An omitted field applies no minimum constraint
                          on size.
                        type: integer
                    type: object
                type: object
              plugins:
                additionalProperties:
                  description: CertificateRequestPolicyPluginData is configuration
                    needed by the plugin approver to evaluate a CertificateRequest
                    on this policy.
                  properties:
                    values:
                      additionalProperties:
                        type: string
                      description: Values define a set of well-known, to the plugin,
                        key value pairs that are required for the plugin to successfully
                        evaluate a request based on this policy.
                      type: object
                  type: object
                description: Plugins are approvers that are built into approver-policy
                  at compile-time. This is an advanced feature typically used to extend
                  approver-policy core features. This field define plugins and their
                  configuration that should be executed when this policy is evaluated
                  against a CertificateRequest.
                type: object
              selector:
                description: Selector is used for selecting over which CertificateRequests
                  this CertificateRequestPolicy is appropriate for and so will be
                  used for its approval evaluation.
                properties:
                  issuerRef:
                    description: "IssuerRef is used to match by issuer, meaning the
                      CertificateRequestPolicy will only evaluate CertificateRequests
                      referring to matching issuers. CertificateRequests will not
                      be processed if the issuer does not match, regardless of whether
                      the requestor is bound by RBAC. \n The following value will
                      match _all_ issuers: ``` issuerRef: {} ```"
                    properties:
                      group:
                        description: Group is the wildcard selector to match the `spec.issuerRef.group`
                          field on requests. Accepts wildcards "*". An omitted field
                          matches all groups.
                        type: string
                      kind:
                        description: Kind is the wildcard selector to match the `spec.issuerRef.kind`
                          field on requests. Accepts wildcards "*". An omitted field
                          matches all kinds.
                        type: string
                      name:
                        description: Name is a wildcard enabled selector that matches
                          the `spec.issuerRef.name` field of requests. Accepts wildcards
                          "*". An omitted field matches all names.
                        type: string
                    type: object
                  namespace:
                    description: Namespace is used to match by namespace, meaning
                      the CertificateRequestPolicy will only match CertificateRequests
                      created in matching namespaces. If this field is omitted, resources
                      in all namespaces are checked.
                    properties:
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels is the set of Namespace labels that
                          select on CertificateRequests which have been created in
                          a namespace matching the selector.
                        type: object
                      matchNames:
                        description: 'MatchNames is the set of namespace names that
                          select on CertificateRequests that have been created in
                          a matching namespace. Accepts wildcards "*". TODO: add x-kubernetes-list-type:
                          set in v1alpha2'
                        items:
                          type: string
                        type: array
                    type: object
                type: object
            required:
            - selector
            type: object
          status:
            description: CertificateRequestPolicyStatus defines the observed state
              of the CertificateRequestPolicy.
            properties:
              conditions:
                description: List of status conditions to indicate the status of the
                  CertificateRequestPolicy. Known condition types are `Ready`.
                items:
                  description: CertificateRequestPolicyCondition contains condition
                    information for a CertificateRequestPolicyStatus.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this condition.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human readable description of the
                        details of the last transition, complementing reason.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the CertificateRequestPolicy.
                      format: int64
                      type: integer
                    reason:
                      description: Reason is a brief machine readable explanation
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of ('True', 'False',
                        'Unknown').
                      type: string
                    type:
                      description: Type of the condition, known values are (`Ready`).
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{ end }}
