# nameOverride replaces the name of the chart in the Chart.yaml file, when this
# is used to construct Kubernetes object names.
# +docs:property
# nameOverride: approver-policy

crds:
  # This option decides if the CRDs should be installed
  # as part of the Helm installation.
  enabled: true

  # This option makes it so that the "helm.sh/resource-policy": keep
  # annotation is added to the CRD. This will prevent Helm from uninstalling
  # the CRD when the Helm release is uninstalled.
  # WARNING: when the CRDs are removed, all cert-manager-approver-policy custom resources
  # (CertificateRequestPolicy) will be removed too by the garbage collector.
  keep: true

# Number of replicas of approver-policy to run.
#
# For example:
#  Use integer to set a fixed number of replicas
#   replicaCount: 2
#
#  Use null, if you want to omit the replicas field and use the Kubernetes default value.
#   replicaCount: null
#
#  Use a string if you want to insert a variable for post-processing of the rendered template.
#   replicaCount: ${REPLICAS_OVERRIDE:=3}
#
# +docs:type=number,string,null
replicaCount: 1

image:
  # Target image registry. This value is prepended to the target image repository, if set.
  # For example:
  #   registry: quay.io
  #   repository: jetstack/cert-manager-approver-policy
  # +docs:property
  # registry: quay.io

  # Target image repository.
  repository: quay.io/jetstack/cert-manager-approver-policy

  # Override the image tag to deploy by setting this variable.
  # If no value is set, the chart's appVersion is used.
  # +docs:property
  # tag: vX.Y.Z

  # Target image digest. Override any tag, if set.
  # For example:
  #   digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
  # +docs:property
  # digest: sha256:...

  # Kubernetes imagePullPolicy on Deployment.
  pullPolicy: IfNotPresent

# Optional secrets used for pulling the approver-policy container image.
imagePullSecrets: []

app:
  # The format of approver-policy logging. Accepted values are text or json.
  logFormat: text
  # Verbosity of approver-policy logging. This is a value from 1 to 5.
  logLevel: 1

  # Extra CLI arguments that will be passed to the approver-policy process.
  extraArgs: []

  # List of signer names that approver-policy will be given permission to
  # approve and deny. CertificateRequests referencing these signer names can be
  # processed by approver-policy. Defaults to an empty array, allowing approval
  # for all signers.
  # ref: https://cert-manager.io/docs/concepts/certificaterequest/#approval
  # +docs:property
  approveSignerNames: []

  usePoliciesRbac:
    # Create RBAC to grant permission to use policies.
    enabled: true
    # List of policies that the referenced service account will be given permission to
    # use. Defaults to an empty array, allowing use of all policies.
    policyNames: []
    # The ServiceAccount granted permission to use policies.
    serviceAccount:
      # Name of ServiceAccount.
      name: cert-manager
      # Namespace of ServiceAccount.
      namespace: cert-manager

  metrics:
    # Port for exposing Prometheus metrics on 0.0.0.0 on path '/metrics'.
    port: 9402
    # The service to expose metrics endpoint.
    service:
      # Create a Service resource to expose metrics endpoint.
      enabled: true
      # The service type to expose metrics.
      type: ClusterIP
      # The ServiceMonitor resource for this Service.
      servicemonitor:
        # Create Prometheus ServiceMonitor resource for approver-policy.
        enabled: false
        # The value for the "prometheus" label on the ServiceMonitor. This allows
        # for multiple Prometheus instances selecting difference ServiceMonitors
        # using label selectors.
        prometheusInstance: default
        # The interval that the Prometheus will scrape for metrics.
        interval: 10s
        # The timeout on each metric probe request.
        scrapeTimeout: 5s
        # Additional labels to give the ServiceMonitor resource.
        labels: {}

  readinessProbe:
    # The container port to expose approver-policy HTTP readiness probe on
    # default network interface.
    port: 6060

  webhook:
    # The host that the webhook listens on.
    host: 0.0.0.0

    # The port that the webhook listens on.
    port: 10250

    # The timeout of webhook HTTP request.
    timeoutSeconds: 5

    service:
      # The type of Kubernetes Service used by the webhook.
      type: ClusterIP

      # The nodePort set on the Service used by the webhook.
      # +docs:property
      # nodePort: 8080

    # Deprecated. Use .hostNetwork instead.
    # +docs:property
    # hostNetwork: false

    # Deprecated. Use .dnsPolicy instead.
    # +docs:property
    # dnsPolicy: ClusterFirst

    # Deprecated. Use .affinity instead.
    # +docs:property
    # affinity: {}

    # Deprecated. Use .nodeSelector instead.
    # +docs:property
    # nodeSelector: {}

    # Deprecated. Use .tolerations instead.
    # +docs:property
    # tolerations: []

# Boolean value, expose pod on hostNetwork.
# Required when running a custom CNI in managed providers such as AWS EKS.
#
# For more information, see [AWS EKS](https://cert-manager.io/docs/installation/compatibility/#aws-eks).
hostNetwork: false

# This value may need to be changed if `hostNetwork: true`
dnsPolicy: ClusterFirst

# Configure the priority class of the Pod.
#
# For more information, see:
# * [Guaranteed Scheduling For Critical Add-On Pods](https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/)
# * [Protect Your Mission-Critical Pods From Eviction With PriorityClass](https://kubernetes.io/blog/2023/01/12/protect-mission-critical-pods-priorityclass/)
#
# For example:
#   priorityClassName: system-cluster-critical
#
priorityClassName: ""

# A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).
#
# For example:
#   affinity:
#     nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: foo.bar.com/role
#            operator: In
#            values:
#            - master
affinity: {}

# The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
# matching labels.
# For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
# +docs:property=nodeSelector
nodeSelector:
  kubernetes.io/os: linux

# A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).
#
# For example:
#   tolerations:
#   - key: foo.bar.com/role
#     operator: Equal
#     value: master
#     effect: NoSchedule
tolerations: []

# List of Kubernetes TopologySpreadConstraints. For more information, see:
# [Pod Topology Spread Constraints](https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/).
#
# For example:
#   topologySpreadConstraints:
#   - maxSkew: 2
#     topologyKey: topology.kubernetes.io/zone
#     whenUnsatisfiable: ScheduleAnyway
#     labelSelector:
#       matchLabels:
#         app.kubernetes.io/name: cert-manager-approver-policy
#         app.kubernetes.io/instance: cert-manager-approver-policy
topologySpreadConstraints: []

podDisruptionBudget:
  # Enable or disable the PodDisruptionBudget resource.
  #
  # This prevents downtime during voluntary disruptions such as during a Node upgrade.
  # For example, the PodDisruptionBudget blocks `kubectl drain`
  # if it is used on the Node where the only remaining approver-policy
  # Pod is currently running.
  enabled: false

  # Configures the minimum available pods for disruptions.
  # Cannot be used if `maxUnavailable` is set.
  # +docs:property
  # minAvailable: 1

  # Configures the maximum unavailable pods for disruptions.
  # Cannot be used if `minAvailable` is set.
  # +docs:property
  # maxUnavailable: 1

# Optional extra volume mounts. Useful for mounting custom root CAs.
#
# For example:
#  volumeMounts:
#  - name: my-volume-mount
#    mountPath: /etc/approver-policy/secrets
volumeMounts: []

# Optional extra volumes.
#
# For example:
#  volumes:
#  - name: my-volume
#    secret:
#      secretName: my-secret
volumes: []

# Kubernetes pod resources.
# For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
#
# For example:
#  resources:
#    limits:
#      cpu: 100m
#      memory: 128Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi
resources: {}

# Allow custom labels to be placed on resources - optional.
commonLabels: {}

# Allow custom annotations to be placed on cert-manager-approver pod - optional.
podAnnotations: {}

# Deployment update strategy for the approver-policy Deployment.
#
# This could be needed when deploying approver-policy on each control-plane node
# and setting anti-affinities to forbid two pods on the same node. In this
# situation, default values of maxSurge (25% round up to next integer = 1) and
# maxUnavailable (25% round down to next integer = 0) block the rolling update
# as the new surge pod can't be scheduled on a control-plane node due to
# anti-affinities. Setting maxSurge to 0 and maxUnavailable to 1 would solve the
# problem.
#
# For example:
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxSurge: 0
#      maxUnavailable: 1
#
# For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).
strategy: {}

# Use these variables to configure the HTTP_PROXY environment variables.

# Configures the HTTP_PROXY environment variable where a HTTP proxy is required.
# +docs:property
# http_proxy: "http://proxy:8080"

# Configures the HTTPS_PROXY environment variable where a HTTP proxy is required.
# +docs:property
# https_proxy: "https://proxy:8080"

# Configures the NO_PROXY environment variable where a HTTP proxy is required,
# but certain domains should be excluded.
# +docs:property
# no_proxy: "127.0.0.1,localhost"
